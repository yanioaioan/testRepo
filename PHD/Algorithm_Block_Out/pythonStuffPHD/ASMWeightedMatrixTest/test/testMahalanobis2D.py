import numpy as np
import scipy.spatial.distance

import cv2

#mean=np.array([[10,11], [100,110], [31,6], [41,5], [53,1]])
#profiles = np.array([[10,10], [100,100], [30,7], [40,4], [50,1]])


profiles=np.array([[ 0.2091195, 0.20415879,0.21975501,0.21702003,0.21412032,0.21419357,
0.20803362,0.20222297,0.2014524, 0.2032821, 0.20258436,0.20884122,
0.20790226],
[ 0.20440252,0.19779126,0.21091626,0.20824062,0.20918713,0.20931878,
0.20552976,0.20071032,0.20519098,0.19773114,0.20847285,0.20672843,
0.20759024],
[ 0.08647799,0.09696974,0.06266507,0.06804535,0.07330781,0.07304007,
0.08528749,0.09225913,0.08696189,0.09372153,0.08632409,0.08573054,
0.08580484],
[ 0.08647799,0.09122049,0.09223884,0.09181382,0.08532598,0.0852812,
0.10364864,0.11146289,0.10739705,0.0867108, 0.08632409,0.08573054,
0.08580484],
[ 0.212573,0.20354051,0.20182504,0.20504938,0.20549299,0.20131675,
0.19564693,0.19037357,0.19419169,0.20474188,0.20364328,0.20193402,
0.20281144],
[ 0.20094901,0.2063192, 0.21259977,0.20983081,0.21256577,0.21684964,
0.20185356,0.20297113,0.20480599,0.21381255,0.21265133,0.21103527,
0.21008638]])



mean = np.array([[ 0.21103325,0.21090681,0.21370211,0.21469793,0.21311203,0.21358,
0.20746681,0.20646326,0.20703171,0.20958056,0.20864962,0.20994543,
0.20914794],
[ 0.20392798,0.20577149,0.2034625, 0.20407813,0.20520755,0.20658775,
0.2035783, 0.20164979,0.19992087,0.19999527,0.20496864,0.20421814,
0.20552354],
[ 0.08470259,0.08261943,0.08150448,0.07925053,0.07985888,0.07951651,
0.09047951,0.09346601,0.09417426,0.09167236,0.08653675,0.0855568,
0.08561421],
[ 0.08881071,0.08931367,0.08649199,0.0855289, 0.08376076,0.08357116,
0.09343924,0.0898317, 0.0864932, 0.08497504,0.08407143,0.08609775,
0.08485509],
[ 0.20322097,0.20221123,0.20460692,0.20276259,0.20671163,0.20498821,
0.19782253,0.20050284,0.20233732,0.20424634,0.2065049, 0.20303363,
0.20577016],
[ 0.20830449,0.20917737,0.21023199,0.21368192,0.21134916,0.21175636,
0.20721361,0.2080864, 0.21004264,0.20953043,0.20926866,0.21114825,
0.20908907]])



covar = np.cov(profiles, rowvar=0)
print covar.shape

#invcovar = np.linalg.inv(covar.reshape((13,13)))
invcovar=0
invcovar=cv2.invert(covar, invcovar, cv2.DECOMP_SVD)
invcovar=invcovar[1]

#invcovar/=100000000000000000

invcovar.shape


print "total_of %d 2d_elements"%(mean.shape[0])

print "invcovar=%s"%(invcovar)


bestProfileMatchWithSmallerMahalanobisDistanceFrom_gProf_to_meanProf=1000000000000;#a large init number

bestIndexProfile=-1
for i in range(mean.shape[0]):
  print "Iterator size=%d"%(mean.shape[0])
  print "test g%d %s...with...gmean%d %s"%(i,profiles[i],i,mean[i])
  tmpMahalDist=scipy.spatial.distance.mahalanobis(profiles[i], mean[i], (invcovar))#np.fabs
  print tmpMahalDist

  if tmpMahalDist < bestProfileMatchWithSmallerMahalanobisDistanceFrom_gProf_to_meanProf:
    bestProfileMatchWithSmallerMahalanobisDistanceFrom_gProf_to_meanProf= tmpMahalDist
    bestIndexProfile=i

print "profile g%d has the bestProfileMatchWithSmallerMahalanobisDistanceFrom_gProf_to_meanProf=%s"%(bestIndexProfile,bestProfileMatchWithSmallerMahalanobisDistanceFrom_gProf_to_meanProf)




